LINK - https://leetcode.com/contest/weekly-contest-277/problems/find-all-lonely-numbers-in-the-array/

class Solution {
public:
    vector<int> findLonely(vector<int>& nums) {
       
     vector<int> ans;
        int n=nums.size();
         if(n==1)
        {
            ans.push_back(nums[0]);
             return ans;
        }
        else if( n==2)
        {
            if( nums[0]+1 != nums[1] && nums[0]!=nums[1])
            {
                ans.push_back(nums[0]);
                ans.push_back(nums[1]);
                return ans;
            }
            else 
            {
                return ans;
            }
        }
        sort(nums.begin(),nums.end());
        
        for(int i=0;i<n;i++)
        {
            if(i==0)
            {
                if(nums[i]==nums[i+1])
                {
                    
                }
                else 
                {
                    if(nums[i]+1 != nums[i+1])
                {
                    ans.push_back(nums[i]);
                }
                }
            }
            else if(i>0 && i <n-1 )
            {
                if(nums[i]==nums[i+1] || nums[i]==nums[i-1])
                {
                    
                }
                else 
                {if((nums[i-1]+1 != nums[i]) && (nums[i] != nums[i+1]-1))
                {
                    ans.push_back(nums[i]);
                }
                }
            }
            else if( i <n-1)
            {
                if(nums[i]==nums[i-1])
                {
                    
                }
                else 
                {
                if(nums[i] != nums[i+1]-1)
                {
                    ans.push_back(nums[i]);
                }
                }
            }
        }
        if( nums[n-2]!= nums[n-1] && nums[n-2]+1!= nums[n-1])
        {
            ans.push_back(nums[n-1]);
        }
        return ans;
    }
};


TC - O(N)
SC - O(1)
