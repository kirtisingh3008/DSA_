LINK - https://leetcode.com/problems/interval-list-intersections/
class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& f, vector<vector<int>>& s) 
    {
      vector<vector<int>> ans;
       int n =f.size();
        int m = s.size();
        vector<int> temp(2);
        int i=0,j=0;
        while(i<n && j<m)
        { 
            if(s[j][0] <= f[i][1] &&  f[i][0] <= s[j][1] )
            {
                temp[0] = max(f[i][0],s[j][0]);
                temp[1] = min(f[i][1],s[j][1]);
               // cout<<temp[0]<<" "<<temp[1]<<endl;
                ans.push_back(temp);
                //temp.clear();
            }
            if(f[i][1] > s[j][1])
            {
                j++;
            }
            else
            {
                i++;
            }
        }
        return ans;
    }
};
TC - 0(MAX(N,M))
SC - 0(1)
// temp vector is of size 2 and negligble
