#include<bits/stdc++.h>
using namespace std;
// merge overlapping intervals
struct intervals
{
    int start;
    int end;
};
bool compare(intervals i1, intervals i2)
{
   return (i1.start < i2.start);
}
void solve(vector<intervals> s, int n)
{
    // lets first sort it
    sort(s.begin(),s.end(),compare);
    stack<intervals> st;
    st.push(s[0]);
    for(int i=1;i<n;i++)
    {
        intervals top1 =st.top();
        if(top1.end < s[i].start)
        {
            st.push(s[0]);
        }
        else if( top1.end <s[i].end)
        {
            top1.end= s[i].end;
            st.pop();
            st.push(top1);
        }
    }
    while(st.empty()==false)
    {
        cout<<st.top().start<<" "<<st.top().end<<endl;
        st.pop();
    }
     

}
int main()
{
    int n;
    cin>>n;
    vector<intervals> a;
    for(int i=0;i<n;i++)
    {
        int x,y;
        cin>>x>>y;
        a.push_back({x,y});
    }
    solve(a,n);

    return 0;
}
// TC- 0(N)
// SC -0(N)
