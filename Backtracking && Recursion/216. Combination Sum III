LINK - https://leetcode.com/problems/combination-sum-iii/

class Solution {
public:
    vector<vector<int>> ans;
    void helper(int index, int k , int n , vector<int>&p)
    {
        if(index == 10 )
        {
            if(n==0 && p.size()==k)
        {
            ans.push_back(p);
          
        }
              return;
        }
        if(n==0 && p.size()==k)
        {
            ans.push_back(p);
            return;
        }
        helper(index+1,k,n,p);
        p.push_back(index);
        helper(index+1,k,n-index,p);
        p.pop_back();
        
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        if( k > n)
            return ans;
        vector<int> p;
        helper(1,k,n,p);
        return ans;
    }
};

