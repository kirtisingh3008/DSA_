N-QUEEEN PROBLEM(GFG)
____

	#include<bits/stdc++.h>
#define ll long long int
using namespace std;
int board[11][11];
bool ispossible(int n,int row,int col)
{
    int i=0;int j=0;
    for(int i=row-1;i>=0;i--)
    {
        if(board[i][col]==1)
        {
            return false;
        }
    }
    for(i=row-1,j=col-1;i>=0 && j>=0 ;i--,j--)
    {
        if(board[i][j]==1)
        {
            return false;
        }
    }
    for(i=row-1,j=col+1;i>=0 &&j<n;i--,j++)
    {
          if(board[i][j]==1)
          {
              return false;
          }
    }
    return true;
}
void helper(int n ,int row)
{
    if(row==n)
    {
        cout<<"[";
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(board[i][j]==1)
                {
                    cout<<j+1<<" ";
                }
         
            }
                   
        }
        cout<<"]";
        cout<<" ";
        
    }
    for(int j=0;j<n;j++)
    {
        if(ispossible(n,row,j))
        {
            board[row][j]=1;
            helper(n,row+1);
            board[row][j]=0;
        }
    }
}
void solve (int n)
{
    
    memset(board,0,11*11*sizeof(int));
    helper(n,0);
    
    
   
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        if(n==2 || n==3)
        {
            cout<<"-1";
        }
        else
        {
         
        solve(n);
        
        }
        cout<<"\n";
       
    }
    return 0;
}
TC -  T(n) = n*T(n-1) + O(n^2)
