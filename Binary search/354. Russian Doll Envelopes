LINK - https://leetcode.com/problems/russian-doll-envelopes/

class Solution {
public:
    // here logic is how about i arrange all the envelopes in 
    // increasing order of height and and if the same height then 
    // decrasing order of width so that i will be always in a situation 
    // where my previous envelopes is smaller than 
   static bool compare(vector<int> &a , vector<int> &b)
   {
       if(a[0] == b[0])
       {
           return (a[1] > b[1]);
       }
       return a[0] < b[0];
   }
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        sort(envelopes.begin(),envelopes.end(),compare);
        vector<int> ans;
        ans.push_back(envelopes[0][1]);
        for(int i=0;i<envelopes.size();i++)
        {
            int curr = envelopes[i][1];
            if(ans.back() < curr )
            {
                ans.push_back(curr);
            }
            else 
            {
                int index = lower_bound(ans.begin(),ans.end(),curr) - ans.begin();
                ans[index] = curr;
            }
        }
        return ans.size();
        
    }
};

TC - O(N*LOGN)
SC - O(N)
