LINK - https://leetcode.com/contest/biweekly-contest-74/problems/maximize-number-of-subsequences-in-a-string/

class Solution {
public:
    long long maximumSubsequenceCount(string text, string pattern) {
        long long ans;
        int n = text.size();
        int m = pattern.size();
        int cnta = 0;
        int cntb =0;
        for(int i=0;i<n;i++)
        {
            if(text[i]==pattern[0])
                cnta++;
            else if(text[i]==pattern[1])
                cntb++;
        }
        string p ;
        if(cnta > cntb)
        {
            p+=text;
            p+=pattern[1];
        }
        else
        {
              p+=pattern[0];
              p+= text;
        }
        cout<<p<<endl;
        long long int dp[p.size()+1][m+1];
        memset(dp,-1,sizeof(dp));
        // if pattern is empty
        for(int i=0;i<=m;i++)
        {
            dp[0][i]=0; 
        }
        for(int i=0;i<=n;i++)
        {
            dp[i][0] =1;
        }
        for(int i=1;i<=p.size();i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(p[i-1] == pattern[j-1])
                {
                    dp[i][j] = dp[i-1][j-1]+ dp[i-1][j];
                }
                else 
                {
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        ans = dp[p.size()][m];
        return ans;
    }
};

TC - O(N*M)
SC - (N*M)
