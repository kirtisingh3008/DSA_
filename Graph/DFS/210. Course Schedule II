LINK - https://leetcode.com/problems/course-schedule-ii/

class Solution {
public:
    bool dfs(vector<vector<int>>& graph, vector<int>& res, int i , vector<int>& color)
    {
        color[i]=1;
        for(auto x : graph[i])
        {
            if(color[x]==1)
                 return true;
            if(color[x]==0)
                if(dfs(graph,res,x, color))
                    return true;
        }
        color[i]=2;
        res.push_back(i);
        return false;
        
    }
    vector<int> findOrder(int n, vector<vector<int>>& prerequisites) {
        vector<vector<int>> graph(n);
        // initially all courses are marked 0
        vector<int> color(n,0),res;
        for (auto x : prerequisites) {
            graph[x[0]].push_back(x[1]);
        }
        for(int i=0;i<n;i++)
        {
            if(!color[i])
            if(dfs(graph,res, i,color)==true)
                return {} ;
        }
        return res;
    }
};

TC - 0(V+E)  // DFS
SC - O(V)--> color vector
