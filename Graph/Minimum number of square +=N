Minimum number of squares whose sum equals to given number n
int solve(int n)
{
   int ans;
   vector<int> visited(n+1,0);
   queue<pair<int,int>> q;
   q.push(make_pair(n,0));
   visited[n]=1;
   int ans =9999;
   while(q.empty()==false)
   {
      pair<int,int> p=q.front();
      q.pop();
      // base case
      if(p.first==0)
        ans =min(ans,p.second);
        for(int i=1;i*i<=p.first;i++)
        {
             int path =  p.fisrt -i*i;
             if(path>=0 && visited[path]!=0)
             {
                visited[path]=1;
                q.push(path,p.second+1);
             }
        }
   }
   return ans;
}
TC -0(N)*(sqrt(N))
SC-0(N) --> queue
