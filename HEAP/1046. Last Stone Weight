LINK - https://leetcode.com/problems/last-stone-weight/

class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
       int n = stones.size();
        priority_queue<int> pq;
        for(int i=0;i<n;i++)
            pq.push(stones[i]);
        while(pq.empty()==false )
        {
            int x = pq.top();
            pq.pop();
            // cout<<x<<endl;
            if(pq.empty()==true)
            {
                pq.push(x);
                break;
            }
            int y = pq.top();
            pq.pop();
            // cout<<y<<endl;
            if(x!=y)
            {
                int r = x-y;
                // cout<<r<<endl;
                pq.push(r);
            }
        }
        if(pq.size()==0)
            return 0;
        return pq.top();
    }
};

TC - O(N)
SC - O(N)
