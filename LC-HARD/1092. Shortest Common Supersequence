LINK - https://leetcode.com/problems/shortest-common-supersequence/


class Solution {
public:
    string shortestCommonSupersequence(string s, string t) {
        int n=s.size();
        int m=t.size();
        int dp[n+1][m+1];
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==0)
                {
                    dp[i][j]=j;
                }
                else if(j==0)
                {
                    dp[i][j]=i;
                }
                else if(s[i-1]==t[j-1])
                {
                   dp[i][j]=dp[i-1][j-1]+1;
                }
                else
                {
                     dp[i][j]=1+min(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        string ans;
        int i=n;
        int j=m;
        while(i>0 && j>0)
        {
            if(s[i-1]==t[j-1])
            {
                ans.push_back(s[i-1]);
                i--;
                j--;
                
            }
            else if(dp[i-1][j] > dp[i][j-1])
            {
               ans.push_back(t[j-1]);
                j--;
            }
            else 
            {
                ans.push_back(s[i-1]);
                i--;
            }
        }
        while(i>0)
        {
            ans.push_back(s[i-1]);
            i--;
        }
        while(j>0)
        {
            ans.push_back(t[j-1]);
            j--;
        }
        reverse(ans.begin(),ans.end());
        return ans;
        
    }
};

TC - (N*N)
SC - O(N*N)
