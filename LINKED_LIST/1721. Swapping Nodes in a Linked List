LINK - https://leetcode.com/problems/swapping-nodes-in-a-linked-list/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
       ListNode * left = head;
       ListNode * right = head;
       ListNode * curr = head;
        int cnt =1;
        while(curr!=NULL)
        {
            if(cnt < k)
            {
                left = left->next;
            }
            // move only when a lag of k count nodes is created
            if(cnt > k)
            {
                right = right->next;
            }
            cnt++;
            curr= curr->next;
        }
        int temp = left->val;
        left->val = right->val;
        right->val = temp;
        return head;
        
    }
};


TC - O(N)
SC - O(1)

