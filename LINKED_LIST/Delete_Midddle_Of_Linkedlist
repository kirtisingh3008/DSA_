LINK - https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
         if(head ==NULL)
             return NULL;
        if(head->next==NULL)
        {
            delete head;
            return NULL;
        }
        int count =0;
        ListNode *temp =head;
        ListNode *ans=head;
        while(temp!=NULL)
        {
            count++;
            temp=temp->next;
        }
        int mid =count/2;
        while(mid-- > 1)
        {
            head=head->next;
        }
        head->next=head->next->next;
        return ans;
        
    }
};
TC - 0(LENGHT OF THE LINKED LIST)
SC- 0(1)
