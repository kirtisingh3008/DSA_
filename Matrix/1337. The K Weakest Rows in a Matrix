LINK - https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/

class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
     vector<pair<int,int>> ans;
        int n = mat.size();
        int m = mat[0].size();
        for(int i=0;i<n;i++)
        {
            int sum =0;
            for(int j=0;j<m;j++)
            {
                sum+=mat[i][j];
            }
            ans.push_back({sum,i});
        }
        sort(ans.begin(),ans.end());
        vector<int>res;
        for(int i=0;i<k;i++)
        {
            res.push_back(ans[i].second);
        }
        
        return res;
    }
};

TC - O(N*M)
SC - O(N)
