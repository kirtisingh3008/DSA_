LINK - https://leetcode.com/problems/validate-stack-sequences/

class Solution {
public:
    bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
        int n = pushed.size();
        int j =0;
        stack<int> st;
        for(int i=0;i<n;)
        {
            if(st.empty()==true)
            {
                cout<<pushed[i]<<endl;
                st.push(pushed[i]);
                
                i++;
            }
            else 
            {
                if(st.top() != popped[j])
                {
                    
                    if(i == n)
                    {
                        break;
                    } 
                  while(st.top()!= popped[j]  && i < n)
                  {
                
                      cout<<pushed[i]<<" ";
                    st.push(pushed[i]);
                      i++;
                  }
                    
                    if( i == n)
                    {
                        break;
                    }
                    cout<<endl;
                    cout<<"pop hu"<<endl;
                    cout<<st.top()<<endl;
                    st.pop();
                    j++;
                    
                }
                else 
                {
                    
                   st.pop();
                    j++;
                }
            }
            
        }
        while( st.empty()==false)
        {
            if(popped[j]==st.top())
            {  
                cout<<"oh"<<endl;
                cout<<popped[j]<<endl;
                st.pop();
            }
            else 
            {
                return false;
            }
            j++;
            
        }
        cout<<j<<endl;
        return j <n ? false : true;
    }
};

TC - O(N)
SC - O(N)
