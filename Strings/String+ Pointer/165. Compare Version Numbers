LINK - https://leetcode.com/problems/compare-version-numbers/

class Solution {
public:
    int compareVersion(string version1, string version2) {
        int n = version1.size();
        int m = version2.size();
        int ptr1= 0;
        int ptr2=0;
        vector<int> a;
        vector<int> b;
        string help="";
        version1+='.';
        version2+='.';
        while(ptr1 < version1.size())
        {
            if(version1[ptr1]!='.')
            {
                help += version1[ptr1++];
            }
            else 
            {
                int k = stoi(help);
                a.push_back(k);
                help="";
                ptr1++;
            }
        }
        
        help="";
        while(ptr2 < version2.size())
        {
            if(version2[ptr2]!='.')
            {
                help+=version2[ptr2++];
            }
            else
            {
                b.push_back(stoi(help));
                help="";
                ptr2++;
            }
        }
  
        if(a.size()!=b.size())
        {
            if(a.size() > b.size())
            {
        while(a.size() > b.size())
        {
            b.push_back(0);
        }
            }
            else 
            {
        while(b.size() > a.size())
        {
            a.push_back(0);
        }
            }
        }
        for(int i=0;i<a.size();i++)
        {
            if(a[i] > b[i])
            {
                return 1;
            }
            if(a[i] < b[i])
            {
                return -1;
            }
        }
       
        
        return 0;
        
    }
};

TC - O(N)
SC - O(N)
