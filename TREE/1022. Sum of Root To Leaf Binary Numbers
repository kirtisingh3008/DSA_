LINK - https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // int sum=0;
    int ans =0;
    void helper(TreeNode* root , int sum)
    {
        if(!root)
            return;
         if(!root->left && !root->right)
        {
             ans +=sum*2+root->val;
        }  
        helper(root->left, sum*2+root->val);
        helper(root->right, sum*2+root->val);
        
    }
    int sumRootToLeaf(TreeNode* root) {
        int sum=0;
        helper(root, sum);
        return ans;
    }
};

TC - O(2^LOG(N)) NUMBER OF NODES
SC - O(1)

